services:

# PROWLARR
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - ${ARRPATH}Prowlarr/config:/config
      - ${ARRPATH}Prowlarr/backup:/data/Backup
      - ${MEDIAPATH}Downloads:/downloads
    ports:
      - 9696:9696
    restart: unless-stopped
    env_file:
      - '.env'

# SONARR
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - ${ARRPATH}Sonarr/config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${MEDIAPATH}/Series:/data/tvshows
      - ${MEDIAPATH}Downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    env_file:
      - '.env'

# RADARR

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - ${ARRPATH}Radarr/config:/config
      - ${MEDIAPATH}Movies:/data/movies
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${MEDIAPATH}Downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    env_file:
      - '.env'

# LIDARR

  # lidarr:
  #   image: linuxserver/lidarr:latest
  #   container_name: lidarr
  #   hostname: lidarr
  #   volumes:
  #     - ${ARRPATH}Lidarr/config:/config
  #     - ${MEDIAPATH}Music:/data/musicfolder
  #     - ${MEDIAPATH}Downloads:/downloads
  #   ports:
  #     - 8686:8686
  #   restart: unless-stopped
  #   env_file:
  #     - '.env'

# READARR

  # readarr:
  #   image: linuxserver/readarr:develop
  #   container_name: readarr
  #   hostname: readarr
  #   volumes:
  #     - ${ARRPATH}Readarr/config:/config
  #     - ${MEDIAPATH}Books:/data/books
  #     - ${MEDIAPATH}Downloads:/downloads
  #   ports:
  #     - 8787:8787
  #   restart: unless-stopped
  #   env_file:
  #     - '.env'

# HOMARR

  homarr:
    container_name: homarr
    image: ghcr.io/homarr-labs/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${ARRPATH}Homarr/configs:/app/data/configs
      - ${ARRPATH}Homarr/icons:/app/public/icons
      - ${ARRPATH}Homarr/appdata:/appdata
    ports:
      - '80:7575'
    env_file:
      - '.env'

# JELLYFIN

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    ports:
      - '8096:8096/tcp'   # Jellyfin web interface
      - '7359:7359/udp'   # Network discovery
      - '1900:1900/udp'   # DLNA port
    volumes:
      - ${ARRPATH}Jellyfin/config:/config
      - ${MEDIAPATH}Movies:/data/Movies
      - ${MEDIAPATH}Series:/data/TVShows
      - ${MEDIAPATH}Music:/data/Music
      - ${MEDIAPATH}Books:/data/Books
    env_file:
      - '.env'
    restart: unless-stopped

#Â QBITTORRENT

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: qbittorrent
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${MEDIAPATH}Downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    healthcheck:
      start_period: 15s
    env_file:
      - '.env'

# BAZARR
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    hostname: bazarr
    volumes:
      - /path/to/bazarr/config:/config
      - ${MEDIAPATH}Movies:/data/movies
      - ${MEDIAPATH}/Series:/data/tvshows
    ports:
      - 6767:6767
    restart: unless-stopped
    env_file:
      - '.env'
